/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&gresc { mods = <(MOD_LGUI|MOD_RGUI|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>; };

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        prefix {
            bindings = <&kp LC(X)>;
            key-positions = <47 48>;
            timeout-ms = <90>;
        };

        move_left {
            bindings = <&mt LG(LEFT) LA(LEFT)>;
            key-positions = <42 41>;
            timeout-ms = <80>;
        };

        copy {
            bindings = <&kp LG(C)>;
            key-positions = <48 49>;
            timeout-ms = <85>;
        };

        paste {
            bindings = <&kp LG(V)>;
            key-positions = <50 49>;
            timeout-ms = <85>;
        };

        cut {
            bindings = <&kp LG(X)>;
            key-positions = <50 48>;
            timeout-ms = <80>;
        };

        left_bkt {
            bindings = <&kp LBKT>;
            key-positions = <55 56>;
            timeout-ms = <90>;
        };

        right_bkt {
            bindings = <&kp RBKT>;
            key-positions = <56 57>;
            timeout-ms = <90>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <55 57>;
            timeout-ms = <90>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <58 56>;
            timeout-ms = <90>;
        };

        move_right {
            bindings = <&mt LG(RIGHT) LA(RIGHT)>;
            key-positions = <41 40>;
            timeout-ms = <90>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <32 33>;
            timeout-ms = <80>;
        };

        aster {
            bindings = <&kp LS(ASTRK)>;
            key-positions = <54 55>;
            timeout-ms = <90>;
        };

        semi {
            bindings = <&kp SEMI>;
            key-positions = <41 43>;
            timeout-ms = <90>;
        };

        dollar {
            bindings = <&kp LS(DOLLAR)>;
            key-positions = <33 34>;
            timeout-ms = <90>;
        };

        left_paren {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <50 51>;
            timeout-ms = <90>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE         &kp N1              &kp N2          &kp N3            &kp N4              &kp N5  &kp N6                                                                                                                                    &kp N6       &kp N7   &kp N8              &kp N9           &kp N0          &kp MINUS               &kp EQUAL
&kp TAB           &kp Q               &kp W           &kp E             &kp R               &kp T   &kp Y                                                                                                                                     &kp T        &kp Y    &kp U               &kp I            &kp O           &kp P                   &kp BSLH
&kp ESCAPE        &hm LEFT_GUI A      &hm LEFT_ALT S  &hm LEFT_SHIFT D  &lt 0 F             &kp G   &kp H                 &mt LG(LEFT_BRACKET) LC(PAGE_UP)  &mt LG(RIGHT_BRACKET) LC(PAGE_DOWN)      &mt HOME PAGE_UP  &mt END LA(PAGE_DOWN)  &mt LS(B) B  &lt 3 H  &hm LEFT_SHIFT J    &hm RIGHT_ALT K  &hm LEFT_GUI L  &kp SQT                 &kp SEMI
&kp LSHFT         &hm LEFT_CONTROL Z  &kp X           &kp C             &kp V               &kp B                                                           &mt LG(X) LG(C)                          &kp LG(LS(Z))                                         &kp N    &kp M               &kp COMMA        &kp DOT         &hm LEFT_CONTROL SLASH  &kp RSHFT
&kp LEFT_CONTROL  &mt LCTRL LEFT      &mt LSHFT DOWN  &mt LALT SPACE    &mt LCMD RIGHT_GUI          &mt LEFT_SHIFT SPACE  &lt 3 DELETE                      &mt LG(LS(V)) LG(V)                      &kp LG(Z)         &lt 1 RIGHT_GUI        &kp ENTER             &mt LCMD BACKSPACE  &mt LALT SPACE   &mt RSHFT DOT   &mt LEFT_CONTROL SLASH  &mo 2
            >;
        };

        layer_right {
            bindings = <
&kp LG(GRAVE)  &kp LC(LA(LG(S)))  &kp LC(LA(LG(W)))  &mt LS(LG(N4)) LG(LS(LC(N4)))  &kp LA(LC(LG(C)))              &kp LA(LC(LG(E)))                &kp LA(LC(LG(F)))                                                                                     &trans               &trans             &trans        &trans             &trans             &trans             &kp LG(GRAVE)
&kp LC(TAB)    &kp LG(Q)          &kp LG(W)          &kp LG(GRAVE)                  &kp LG(R)                      &mt LG(LS(T)) LG(T)              &mt LG(LC(LA(LS(SQT)))) LA(LC(LG(SQT)))                                                               &kp C_VOL_UP         &kp LG(LC(LA(O)))  &trans        &kp LA(LC(LG(I)))  &kp LA(LC(LG(D)))  &kp LA(LC(LG(P)))  &trans
&trans         &kp LGUI           &kp LALT           &kp LSHFT                      &mt LC(LA(LS(UP))) LC(LA(UP))  &mt LG(LBKT) LC(PAGE_UP)         &mt LG(RBKT) LC(PAGE_DOWN)               &bt BT_SEL 1  &bt BT_SEL 3      &bt BT_SEL 0  &kp LG(GRAVE)  &mt C_MUTE C_VOL_DN  &trans             &kp UP_ARROW  &trans             &trans             &kp LA(LC(LG(V)))  &trans
&trans         &kp LG(Z)          &kp LG(LS(Z))      &mt LC(LS(LEFT)) LC(LA(LEFT))  &mt LG(M) LC(LA(DOWN))         &mt LC(LS(RIGHT)) LC(LA(RIGHT))                                                         &trans            &trans                                            &kp LEFT_ARROW     &kp DOWN      &kp RIGHT          &trans             &trans             &trans
&trans         &trans             &trans             &trans                         &trans                                                          &trans                                   &trans        &trans            &trans        &trans         &trans                                  &trans        &trans             &trans             &trans             &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans                                                     &trans                  &tog 0      &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                                &bootloader             &none       &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_SEL 1  &bt BT_SEL 3  &rgb_ug RGB_MEFS_CMD 5  &none       &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                               &bt BT_CLR  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none         &bl BL_TOG    &rgb_ug RGB_TOG                     &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        layer_left {
            bindings = <
&trans  &kp LG(LA(LC(S)))  &trans  &mt LG(LS(N4)) LG(LS(LC(N4)))  &trans  &trans             &kp LG(LA(LC(F)))                                                            &trans  &trans                         &trans                         &trans                           &trans  &trans  &trans
&trans  &trans             &kp N7  &kp N8                         &kp N9  &kp N0             &mt LS(LA(LC(LG(SQT)))) LS(LC(LA(SQT)))                                      &trans  &trans                         &trans                         &trans                           &trans  &trans  &trans
&trans  &trans             &kp N4  &kp N5                         &kp N6  &kp LG(LA(LC(C)))  &kp LG(LA(LC(E)))                        &trans  &trans      &trans  &trans  &trans  &trans                         &mt LC(LA(LS(UP))) LC(LA(UP))  &trans                           &trans  &trans  &trans
&trans  &trans             &kp N1  &kp N2                         &kp N3  &kp LG(LA(LC(W)))                                                   &trans      &trans                  &mt LC(LS(LEFT)) LC(LA(LEFT))  &kp LA(LC(DOWN))               &mt LC(LS(RIGHT)) LC(LA(RIGHT))  &trans  &trans  &trans
&trans  &trans             &trans  &trans                         &trans                     &trans                                   &trans  &trans      &trans  &none   &trans                                 &trans                         &trans                           &trans  &trans  &trans
            >;
        };
    };
};
