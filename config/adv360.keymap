
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp GRAVE     &mt EXCL N1  &mt AT N2    &mt HASH N3   &mt DOLLAR N4  &mt PRCNT N5                    &mo 3                                                                                       &mt CARET N6  &mt AMPS N7  &mt ASTRK N8    &mt LPAR N9  &mt RPAR N0  &kp MINUS  &kp EQUAL
   &kp TAB           &kp Q      &kp W          &kp E           &kp R         &kp T              &kp PAGE_UP                                                                                              &none        &kp Y         &kp U          &kp I        &kp O      &kp P   &kp BSLH
   &kp ESC           &kp A      &kp S          &kp D           &kp F         &kp G            &kp PAGE_DOWN       &kp LGUI              &kp LALT                             &kp LALT   &kp LGUI         &kp B        &kp H         &kp J          &kp K        &kp L   &kp SEMI    &kp SQT
 &kp LSHFT           &kp Z      &kp X          &kp C           &kp V         &kp B                                          &mt LEFT_SHIFT LG(V)                      &mt LSHFT LG(Z)                                 &kp N         &kp M      &kp COMMA      &kp DOT   &kp FSLH  &kp RSHFT
     &mo 2  &mt LCTRL LEFT     &kp UP  &mt LALT DOWN  &mt LCMD RIGHT                              &kp SPACE  &kp BACKSPACE       &mt LCTRL LG(C)                  &mt LCTRL LG(LS(Z))  &kp SPACE     &kp ENTER                   &kp RCMD  &kp BACKSPACE    &mt I ESC  &kp LCTRL      &mo 2
            >;
        };

        layer_pad {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5              &trans                                                                 &mo 3  &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
   &kp TAB      &kp Q     &kp W     &kp E      &kp R   &kp T               &none                                                                 &none   &kp Y   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &kp BSLH
   &kp ESC      &kp A     &kp S     &kp D      &kp F   &kp G               &none  &kp LCTRL  &kp LALT                   &kp LGUI  &kp RCTRL      &none   &kp H   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS    &kp SQT
 &kp LSHFT      &kp Z     &kp X     &kp C      &kp V   &kp B                                 &kp HOME                  &kp PG_UP                         &kp N   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &kp RSHFT
     &mo 2  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                    &kp BSPC    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER  &kp KP_N0              &kp UP      &kp DOWN     &kp KP_DOT         &kp RBKT      &mo 2
            >;
        };

        layer_fn___ {
            bindings = <
 &kp ESC        &trans      &trans  &mt LG(LS(N3)) N3  &mt LG(LS(N4)) N4     &trans              &trans                                                               &trans     &trans            &trans     &trans  &kp LA(SPACE)          &kp LA(S)  &kp BACKSPACE
  &trans     &kp LG(Q)   &kp LG(W)          &kp LG(E)          &kp LG(R)  &kp LG(T)            &kp HOME                                                         &kp C_VOL_UP  &kp LG(Y)         &kp LG(U)  &kp LG(I)      &kp LG(O)     &mt LG(P) LBKT       &kp RBKT
  &trans     &kp LG(A)   &kp LG(S)          &kp LG(D)          &kp LG(F)  &kp LG(G)             &kp END  &trans  &trans                  &trans  &trans  &mt C_MUTE C_VOL_DN  &kp LG(H)         &kp LG(J)  &kp LG(K)   &mt LG(L) UP           &kp LPAR       &kp RPAR
  &trans     &kp LG(Z)   &kp LG(X)          &kp LG(C)          &kp LG(V)  &kp LG(B)                              &trans                  &trans                               &kp LG(N)         &kp LG(M)   &kp LEFT       &kp DOWN          &kp RIGHT         &trans
  &trans  &kp LG(LEFT)  &kp LG(UP)       &kp LG(DOWN)      &kp LG(RIGHT)                         &trans  &trans  &trans                  &trans  &trans               &trans             &kp LC(LA(LEFT))     &trans         &trans  &kp LC(LA(RIGHT))         &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                 &trans                                                                          &trans  &tog 1       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none    &macro_ver         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

    };
};
